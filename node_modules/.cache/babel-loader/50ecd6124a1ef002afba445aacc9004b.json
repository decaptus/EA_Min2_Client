{"ast":null,"code":"import axios from 'axios'; //we're going to use it to do API calls\n\nconst url_bulltin = 'http://localhost:4000/tutor'; //direccion del backend para bulletins\n\nconst url_logIn = 'http://localhost:4000/users';\nconst url_quest = 'http://localhost:4000/user'; //direccion del backend para Register y LogIn\n\nconst API = axios.create({\n  baseURL: 'http://localhost:4000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n    console.log(`Bearer ${JSON.parse(localStorage.getItem('profile')).token}`);\n  }\n\n  return req;\n}); //posts\n\nexport const fetchPosts = () => axios.get(url_bulltin);\nexport const createPost = newPost => API.post(url_bulltin, newPost);\nexport const likePost = (id, updatedata) => axios.patch(`${url_bulltin}/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url_bulltin}/${id}`, updatedPost);\nexport const deletePost = id => axios.delete(`${url_bulltin}/${id}`); //user\n\nexport const Register = newPost => axios.post(url_logIn, newPost);\n_c = Register;\nexport const fetchQuest = () => axios.get(url_quest);\nexport const createQuest = newPost => axios.post(url_quest, newPost);\nexport const likeQuest = id => axios.patch(`${url_quest}/${id}/likePost`);\nexport const updateQuest = (id, updatedPost) => axios.patch(`${url_quest}/${id}`, updatedPost);\nexport const deleteQuest = id => axios.delete(`${url_quest}/${id}`);\nexport const signIn = formData => axios.post(`${url_logIn}/signin`, formData);\nexport const signUp = formData => axios.post(`${url_logIn}/signup`, formData);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/api/index.js"],"names":["axios","url_bulltin","url_logIn","url_quest","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","console","log","fetchPosts","get","createPost","newPost","post","likePost","id","updatedata","patch","updatePost","updatedPost","deletePost","delete","Register","fetchQuest","createQuest","likeQuest","updateQuest","deleteQuest","signIn","formData","signUp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAAyD;;AAEzD,MAAMC,WAAW,GAAG,6BAApB,C,CAAgE;;AAChE,MAAMC,SAAS,GAAG,6BAAlB;AACA,MAAMC,SAAS,GAAG,4BAAlB,C,CAA6D;;AAC7D,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACpC,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAc,UAASJ,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAzE;AACD;;AAED,SAAOP,GAAP;AACD,CAPD,E,CASA;;AACA,OAAO,MAAMU,UAAU,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUpB,WAAV,CAAzB;AACP,OAAO,MAAMqB,UAAU,GAAIC,OAAD,IAAanB,GAAG,CAACoB,IAAJ,CAASvB,WAAT,EAAsBsB,OAAtB,CAAhC;AACP,OAAO,MAAME,QAAQ,GAAG,CAACC,EAAD,EAAKC,UAAL,KAAoB3B,KAAK,CAAC4B,KAAN,CAAa,GAAE3B,WAAY,IAAGyB,EAAG,WAAjC,CAArC;AACP,OAAO,MAAMG,UAAU,GAAG,CAACH,EAAD,EAAKI,WAAL,KAAqB9B,KAAK,CAAC4B,KAAN,CAAa,GAAE3B,WAAY,IAAGyB,EAAG,EAAjC,EAAoCI,WAApC,CAAxC;AACP,OAAO,MAAMC,UAAU,GAAIL,EAAD,IAAQ1B,KAAK,CAACgC,MAAN,CAAc,GAAE/B,WAAY,IAAGyB,EAAG,EAAlC,CAA3B,C,CAEP;;AACA,OAAO,MAAMO,QAAQ,GAAIV,OAAD,IAAavB,KAAK,CAACwB,IAAN,CAAWtB,SAAX,EAAsBqB,OAAtB,CAA9B;KAAMU,Q;AACb,OAAO,MAAMC,UAAU,GAAG,MAAMlC,KAAK,CAACqB,GAAN,CAAUlB,SAAV,CAAzB;AACP,OAAO,MAAMgC,WAAW,GAAIZ,OAAD,IAAavB,KAAK,CAACwB,IAAN,CAAWrB,SAAX,EAAsBoB,OAAtB,CAAjC;AACP,OAAO,MAAMa,SAAS,GAAIV,EAAD,IAAQ1B,KAAK,CAAC4B,KAAN,CAAa,GAAEzB,SAAU,IAAGuB,EAAG,WAA/B,CAA1B;AACP,OAAO,MAAMW,WAAW,GAAG,CAACX,EAAD,EAAKI,WAAL,KAAqB9B,KAAK,CAAC4B,KAAN,CAAa,GAAEzB,SAAU,IAAGuB,EAAG,EAA/B,EAAkCI,WAAlC,CAAzC;AACP,OAAO,MAAMQ,WAAW,GAAIZ,EAAD,IAAQ1B,KAAK,CAACgC,MAAN,CAAc,GAAE7B,SAAU,IAAGuB,EAAG,EAAhC,CAA5B;AAEP,OAAO,MAAMa,MAAM,GAAIC,QAAD,IAAcxC,KAAK,CAACwB,IAAN,CAAY,GAAEtB,SAAU,SAAxB,EAAkCsC,QAAlC,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAcxC,KAAK,CAACwB,IAAN,CAAY,GAAEtB,SAAU,SAAxB,EAAkCsC,QAAlC,CAA7B","sourcesContent":["import axios from 'axios';                               //we're going to use it to do API calls\n\nconst url_bulltin = 'http://localhost:4000/tutor';              //direccion del backend para bulletins\nconst url_logIn = 'http://localhost:4000/users';\nconst url_quest = 'http://localhost:4000/user';              //direccion del backend para Register y LogIn\nconst API = axios.create({ baseURL: 'http://localhost:4000' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n    console.log( `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`);\n  }\n\n  return req;\n});\n\n//posts\nexport const fetchPosts = () => axios.get(url_bulltin);\nexport const createPost = (newPost) => API.post(url_bulltin, newPost);\nexport const likePost = (id, updatedata) => axios.patch(`${url_bulltin}/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url_bulltin}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url_bulltin}/${id}`);\n\n//user\nexport const Register = (newPost) => axios.post(url_logIn, newPost);\nexport const fetchQuest = () => axios.get(url_quest);\nexport const createQuest = (newPost) => axios.post(url_quest, newPost);\nexport const likeQuest = (id) => axios.patch(`${url_quest}/${id}/likePost`);\nexport const updateQuest = (id, updatedPost) => axios.patch(`${url_quest}/${id}`, updatedPost);\nexport const deleteQuest = (id) => axios.delete(`${url_quest}/${id}`);\n\nexport const signIn = (formData) => axios.post(`${url_logIn}/signin`, formData);\nexport const signUp = (formData) => axios.post(`${url_logIn}/signup`, formData);\n\n\n "]},"metadata":{},"sourceType":"module"}