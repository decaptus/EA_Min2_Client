{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Documents\\\\UPC\\\\EA\\\\Minimo2\\\\Client\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\nimport { Avatar, Typography, Button } from '@material-ui/core';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport { Image } from 'cloudinary-react';\nimport { ClassNames } from '@emotion/react';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport * as actionType from '../../constants/actionTypes';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [sidebar, setSidebar] = useState(false);\n  const [user, setUser] = useState(JSON.parse(window.localStorage.getItem('profile')));\n  const location = useLocation();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  console.log(user);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  const logout = () => {\n    dispatch({\n      type: actionType.LOGOUT\n    });\n    history.push('/');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(window.localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n      value: {\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"menu-bars\",\n          children: /*#__PURE__*/_jsxDEV(FaIcons.FaBars, {\n            onClick: showSidebar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profile,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: user.result.name,\n              src: user.result.picture\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.userName,\n              variant: \"h6\",\n              children: [user === null || user === void 0 ? void 0 : user.result.name, \" \", user === null || user === void 0 ? void 0 : user.result.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: logout,\n              children: /*#__PURE__*/_jsxDEV(SettingsIcon, {\n                fontSize: \"large\",\n                style: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: [\" \", user === null || user === void 0 ? void 0 : user.result.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: sidebar ? 'nav-menu active' : 'nav-menu',\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav-menu-items\",\n          onClick: showSidebar,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"navbar-toggle\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"menu-bars\",\n              children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineClose, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), SidebarData.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: item.cName,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: item.path,\n                children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"N21P2b6t+sQgMkgNvGpFRioDZNY=\", false, function () {\n  return [useLocation, useStyles, useDispatch, useHistory];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","FaIcons","AiIcons","SidebarData","IconContext","Avatar","Typography","Button","Link","useLocation","useHistory","decode","Image","ClassNames","useStyles","useDispatch","actionType","SettingsIcon","Navbar","sidebar","setSidebar","user","setUser","JSON","parse","window","localStorage","getItem","location","classes","dispatch","history","console","log","showSidebar","logout","type","LOGOUT","push","token","decodedToken","exp","Date","getTime","color","profile","result","name","picture","userName","lastName","map","item","index","cName","path","icon","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\n\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\nimport { Avatar, Typography, Button} from '@material-ui/core';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport {Image} from 'cloudinary-react';\nimport { ClassNames } from '@emotion/react';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport * as actionType from '../../constants/actionTypes';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n\n\n\n\nconst Navbar = () => {\n  const [sidebar, setSidebar] = useState(false);\n  const [user,setUser] = useState(JSON.parse(window.localStorage.getItem('profile')));\n  const location = useLocation();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  \n  console.log(user);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push('/');\n\n    setUser(null);\n  };\n\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(window.localStorage.getItem('profile')));\n  }, [location]);\n\n  \n\n \n\n\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='navbar' >\n          <Link to='#' className='menu-bars'>\n            <FaIcons.FaBars onClick={showSidebar} />   \n          </Link>\n\n          <div>\n            {user ? (\n              <div className={classes.profile}>\n              \n                <Avatar alt={user.result.name} src={user.result.picture}></Avatar>\n                <Typography  className={classes.userName} variant=\"h6\">{user?.result.name} {user?.result.lastName}</Typography>\n                <Button  onClick={logout}>\n                <SettingsIcon fontSize=\"large\" style={{color : 'white'}}/>\n\n                </Button>\n\n              </div>\n\n            ): (\n              <Link to='/'>\n              <button> {user?.result.name} </button>\n              </Link>\n            \n            )}\n\n          </div>\n  \n        </div>\n\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}