{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((questions = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case LIKE:\n      return questions.map(question => question._id === action.payload._id ? action.payload : question);\n\n    case CREATE:\n      return [...questions, action.payload];\n\n    case UPDATE:\n      return questions.map(question => question._id === action.payload._id ? action.payload : question);\n\n    case DELETE:\n      return questions.filter(question => question._id !== action.payload);\n\n    default:\n      return questions;\n  }\n});","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/reducers/questions.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","questions","action","type","payload","map","question","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AAEA,gBAAe,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAjB,KAA4B;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,SAAL;AACE,aAAOM,MAAM,CAACE,OAAd;;AACF,SAAKJ,IAAL;AACE,aAAOC,SAAS,CAACI,GAAV,CAAeC,QAAD,IAAeA,QAAQ,CAACC,GAAT,KAAiBL,MAAM,CAACE,OAAP,CAAeG,GAAhC,GAAsCL,MAAM,CAACE,OAA7C,GAAuDE,QAApF,CAAP;;AACF,SAAKT,MAAL;AACE,aAAO,CAAC,GAAGI,SAAJ,EAAeC,MAAM,CAACE,OAAtB,CAAP;;AACF,SAAKN,MAAL;AACE,aAAOG,SAAS,CAACI,GAAV,CAAeC,QAAD,IAAeA,QAAQ,CAACC,GAAT,KAAiBL,MAAM,CAACE,OAAP,CAAeG,GAAhC,GAAsCL,MAAM,CAACE,OAA7C,GAAuDE,QAApF,CAAP;;AACF,SAAKP,MAAL;AACE,aAAOE,SAAS,CAACO,MAAV,CAAkBF,QAAD,IAAcA,QAAQ,CAACC,GAAT,KAAiBL,MAAM,CAACE,OAAvD,CAAP;;AACF;AACE,aAAOH,SAAP;AAZJ;AAcD,CAfH","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (questions = [], action) => {\n    switch (action.type) {\n      case FETCH_ALL:\n        return action.payload;\n      case LIKE:\n        return questions.map((question) => (question._id === action.payload._id ? action.payload : question));\n      case CREATE:\n        return [...questions, action.payload];\n      case UPDATE:\n        return questions.map((question) => (question._id === action.payload._id ? action.payload : question));\n      case DELETE:\n        return questions.filter((question) => question._id !== action.payload);\n      default:\n        return questions;\n    }\n  };\n  \n  "]},"metadata":{},"sourceType":"module"}