{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Documents\\\\UPC\\\\EA\\\\Minimo2\\\\Client\\\\src\\\\components\\\\Questions\\\\Question\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useStyles from './styles';\nimport { Container, AppBar, Typography, Grow, Grid, CircularProgress, CardHeader, Card, Avatar, CardContent, Button, CardActions } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = ({\n  question: question,\n  setCurrentId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '100%'\n    },\n    className: classes.card,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        \"aria-label\": \"avatar\",\n        children: question.creator.charAt(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          color: 'grey'\n        },\n        size: \"small\",\n        onClick: () => {},\n        children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n          fontSize: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this),\n      title: question.creator,\n      subheader: moment(question.createdAt).fromNow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        className: classes.question,\n        children: [question.question, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      className: classes.cardActions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => {},\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: () => {},\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"wEJgZQ2jDkMa1kY7WfR7H6lD2Qo=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/components/Questions/Question/Question.js"],"names":["React","useStyles","Container","AppBar","Typography","Grow","Grid","CircularProgress","CardHeader","Card","Avatar","CardContent","Button","CardActions","useDispatch","MoreHorizIcon","DeleteIcon","moment","Question","question","setCurrentId","dispatch","classes","width","card","creator","charAt","color","createdAt","fromNow","cardActions"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,UAA3B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,gBAAnD,EAAoEC,UAApE,EAA+EC,IAA/E,EAAoFC,MAApF,EAA2FC,WAA3F,EAAuGC,MAAvG,EAA+GC,WAA/G,QAAiI,mBAAjI;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAAEA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAAyC;AAAA;;AACtD,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGrB,SAAS,EAAzB;AAEA,sBAEA,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAgC,IAAA,SAAS,EAAED,OAAO,CAACE,IAAnD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,MAAM,eACJ,QAAC,MAAD;AAAS,sBAAW,QAApB;AAAA,kBACGL,QAAQ,CAACM,OAAT,CAAiBC,MAAjB,CAAwB,CAAxB;AADH;AAAA;AAAA;AAAA;AAAA,cAFJ;AAME,MAAA,MAAM,eACJ,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAf;AAA+B,QAAA,IAAI,EAAC,OAApC;AAA4C,QAAA,OAAO,EAAE,MAAI,CAAE,CAA3D;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ;AAWE,MAAA,KAAK,EAAER,QAAQ,CAACM,OAXlB;AAYE,MAAA,SAAS,EACPR,MAAM,CAACE,QAAQ,CAACS,SAAV,CAAN,CAA2BC,OAA3B;AAbJ;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,WAAD;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,SAAS,EAAEP,OAAO,CAACH,QAA/C;AAAA,mBAA0DA,QAAQ,CAACA,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF,eAoBE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEG,OAAO,CAACQ,WAAhC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAE,MAAK,CAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAE,MAAK,CAAE,CAArD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAmCH,CAvCD;;GAAMZ,Q;UACeJ,W,EACDb,S;;;KAFdiB,Q;AAwCN,eAAeA,QAAf","sourcesContent":["\nimport React from 'react';\nimport useStyles from './styles';\nimport {Container, AppBar, Typography, Grow, Grid, CircularProgress,CardHeader,Card,Avatar,CardContent,Button, CardActions} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\n\nconst Question = ({question: question, setCurrentId }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    return(\n\n    <Card style={{ width: '100%' }} className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar  aria-label=\"avatar\">\n            {question.creator.charAt(0)}\n          </Avatar>\n        }\n        action={\n          <Button style={{color:'grey'}} size=\"small\" onClick={()=>{}}>\n            <MoreHorizIcon fontSize=\"medium\"/>\n          </Button>\n        }\n        title={question.creator}\n        subheader={\n          moment(question.createdAt).fromNow()\n        }\n      />\n      <CardContent>\n        <Typography variant=\"body2\" className={classes.question}>{question.question} </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" onClick={()=> {}}>\n            Answer\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={()=> {}}>\n            <DeleteIcon fontSize=\"small\" />\n            Delete\n        </Button>\n      </CardActions>\n    </Card>\n\n   \n    );\n}   \nexport default Question;\n"]},"metadata":{},"sourceType":"module"}