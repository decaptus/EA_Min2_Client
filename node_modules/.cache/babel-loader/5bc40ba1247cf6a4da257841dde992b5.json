{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Documents\\\\UPC\\\\EA\\\\Minimo2\\\\Client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  picture: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const [imageSelected, setImageSelected] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      if (imageSelected != \"\") {\n        form.picture = imageSelected;\n        dispatch(signup(form, history));\n      } else {\n        window.alert(\"Waiting for photo uploading\");\n      }\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  const uploadImage = files => {\n    const formData = new FormData();\n    formData.append(\"file\", files[0]);\n    formData.append(\"upload_preset\", \"pfnjslol\"); //this name is given to me by cloudinary\n\n    Axios.post(\"https://api.cloudinary.com/v1_1/sergiogras/image/upload\", formData).then(response => {\n      console.log(response.data);\n      setImageSelected(response.data.secure_url);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(InsertPhotoIcon, {\n                fontSize: \"large\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: classes.margin,\n                onChange: event => {\n                  uploadImage(event.target.files);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), isSignup && imageSelected.length == 0 && /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"info\",\n          className: classes.submit,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), isSignup && imageSelected.length != 0 && /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"564033717568-e5p23rhvcs4i6kffgsbci1d64r8hp6fn.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 155\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleError,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"+zpNo5REnLeUeGhLSbnzzzYWk1c=\", false, function () {\n  return [useDispatch, useHistory, useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/components/Auth/Auth.js"],"names":["React","useState","Axios","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useHistory","GoogleLogin","LockOutlinedIcon","InsertPhotoIcon","Icon","signin","signup","AUTH","useStyles","Input","initialState","name","lastName","email","password","confirmPassword","picture","Auth","form","setForm","isSignup","setIsSignup","imageSelected","setImageSelected","dispatch","history","classes","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignup","handleSubmit","e","preventDefault","window","alert","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleError","handleChange","target","value","uploadImage","files","formData","FormData","append","post","then","response","secure_url","paper","avatar","margin","event","length","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios'\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { name: '', lastName: '', email: '', password: '', confirmPassword: '', picture: '' };\n\nconst Auth = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const [imageSelected, setImageSelected] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n\n\n    if (isSignup ) {\n      if ( imageSelected!=\"\"){\n      form.picture=imageSelected;\n      dispatch(signup(form, history));\n      \n      }else {\n        window.alert(\"Waiting for photo uploading\");\n    }\n\n    }else {\n      dispatch(signin(form, history));\n      \n  }\n\n  };\n\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  \n\n  const uploadImage = (files) => {\n    const formData = new FormData()\n    formData.append(\"file\", files[0])\n    formData.append(\"upload_preset\",\"pfnjslol\")   //this name is given to me by cloudinary\n\n    Axios.post(\"https://api.cloudinary.com/v1_1/sergiogras/image/upload\",\n    formData\n    ).then((response) => {\n      console.log(response.data);\n      setImageSelected(response.data.secure_url);\n      \n     \n    });\n    \n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"name\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && (\n            \n            <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />\n            \n\n            )}\n\n            { isSignup && (\n            <>\n            <Grid item xs={1}>\n               <InsertPhotoIcon fontSize=\"large\" color=\"primary\"  />\n               \n            </Grid>\n            <Grid item xs={10}>\n            <input type=\"file\" className={classes.margin} onChange={(event) => {\n              uploadImage(event.target.files)\n            }}></input >\n            </Grid>\n              \n            </>\n            )}\n          </Grid>\n          { isSignup && imageSelected.length==0 && (\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"info\" className={classes.submit}>\n            Sign Up\n          </Button>\n          )}\n          { isSignup && imageSelected.length!=0 && (\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            Sign Up\n          </Button>\n          )}\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            Sign in\n          </Button>\n\n          <GoogleLogin\n            clientId=\"564033717568-e5p23rhvcs4i6kffgsbci1d64r8hp6fn.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n\n      \n    </Container>\n    \n\n\n\n    \n  );\n};\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}