{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Documents\\\\UPC\\\\EA\\\\Minimo2\\\\Client\\\\src\\\\components\\\\NewQuest\\\\NewQuest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createQuest, updateQuest } from '../../actions/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewQuestion = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [questData, setQuestData] = useState({\n    creator: '',\n    question: ''\n  });\n  const question = useSelector(state => currentId ? state.questions.find(question => question._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (question) setQuestData(question);\n  }, [question]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setQuestData({\n      creator: '',\n      question: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createQuest(questData));\n      clear();\n    } else {\n      dispatch(updateQuest(currentId, questData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${question.title}\"` : 'Ask something'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: questData.creator,\n        onChange: e => setQuestData({ ...questData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"question\",\n        variant: \"outlined\",\n        label: \"Question\",\n        fullWidth: true,\n        value: questData.question,\n        onChange: e => setQuestData({ ...questData,\n          question: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewQuestion, \"s0/ulnAov5POrHBFbXwD1vFGvbM=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = NewQuestion;\nexport default NewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/components/NewQuest/NewQuest.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createQuest","updateQuest","NewQuestion","currentId","setCurrentId","questData","setQuestData","creator","question","state","questions","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","title","target","value","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createQuest, updateQuest } from '../../actions/questions';\n\nconst NewQuestion = ({ currentId, setCurrentId }) => {\n  const [questData, setQuestData] = useState({ creator: '', question: ''});\n  const question = useSelector((state) => (currentId ? state.questions.find((question) => question._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (question) setQuestData(question);\n  }, [question]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setQuestData({ creator: '', question: ''});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createQuest(questData));\n      clear();\n    } else {\n      dispatch(updateQuest(currentId, questData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${question.title}\"` : 'Ask something'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={questData.creator} onChange={(e) => setQuestData({ ...questData, creator: e.target.value })} />\n        <TextField name=\"question\" variant=\"outlined\" label=\"Question\" fullWidth value={questData.question} onChange={(e) => setQuestData({ ...questData, question: e.target.value })} />\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default NewQuestion;"]},"metadata":{},"sourceType":"module"}