{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/questions';\nexport const getQuest = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchQuest(); //we obtain a response of data from an api.get(url)\n\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    }); //dispatch takes an action object as parameter\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createQuest = quest => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createQuest(quest);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updateQuest = (id, quest) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateQuest(id, quest);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likeQuest = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likeQuest(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deleteQuest = id => async dispatch => {\n  try {\n    await api.deleteQuest(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/Eric/Documents/UPC/EA/Minimo2/Client/src/actions/questions.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getQuest","dispatch","data","fetchQuest","type","payload","error","console","log","message","createQuest","quest","updateQuest","id","likeQuest","deleteQuest"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AAEA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB,CADE,CAC8C;;AAEhDF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEV,SAAR;AAAmBW,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR,CAHE,CAG8C;AACjD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARI;AAUL,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAOV,QAAP,IAAoB;AAExD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,WAAJ,CAAgBC,KAAhB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,MAAR;AAAgBU,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CATM;AAWP,OAAO,MAAMG,WAAW,GAAG,CAACC,EAAD,EAAKF,KAAL,KAAe,MAAOV,QAAP,IAAoB;AAC5D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,WAAJ,CAAgBC,EAAhB,EAAoBF,KAApB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,MAAR;AAAgBS,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMK,SAAS,GAAID,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACnD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACe,SAAJ,CAAcD,EAAd,CAAvB;AAEAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,IAAR;AAAcO,MAAAA,OAAO,EAAEH;AAAvB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CARM;AAUP,OAAO,MAAMM,WAAW,GAAIF,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACrD,MAAI;AACF,UAAMF,GAAG,CAACgB,WAAJ,CAAgBF,EAAhB,CAAN;AAEAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,MAAR;AAAgBQ,MAAAA,OAAO,EAAEQ;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AAEF,CATM","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nimport * as api from '../api/questions';\n\n\nexport const getQuest = () => async (dispatch) => {\n    try {\n      const { data } = await api.fetchQuest();        //we obtain a response of data from an api.get(url)\n  \n      dispatch({ type: FETCH_ALL, payload: data });   //dispatch takes an action object as parameter\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const createQuest = (quest) => async (dispatch) => {\n  \n    try {\n      const { data } = await api.createQuest(quest);\n  \n      dispatch({ type: CREATE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const updateQuest = (id, quest) => async (dispatch) => {\n    try {\n      const { data } = await api.updateQuest(id, quest);\n  \n      dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const likeQuest = (id) => async (dispatch) => {\n    try {\n      const { data } = await api.likeQuest(id);\n  \n      dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  \n  export const deleteQuest = (id) => async (dispatch) => {\n    try {\n      await api.deleteQuest(id);\n  \n      dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n      console.log(error.message);\n    }\n    \n  };"]},"metadata":{},"sourceType":"module"}